@using System.Collections.Generic
@model Naspinski.FoodTruck.Data.Distribution.Models.Menu.MenuItemsModel
@using Naspinski.FoodTruck.Admin.Models
@await Html.PartialAsync("_IndexHeader", new IndexHeaderModel("Menu", "Menu Items"))

@if (!Model.Categories.SelectMany(x => x.MenuItems).Any())
{
    <li class="list-group-item">
        no menu items
        <a asp-area="" asp-controller="Menu" asp-action="Edit">add menu item</a>
    </li> }
else
{
    @foreach (var category in Model.Categories)
    {
        <h3>
            @(category.Id == 0 ? "[no category]" : $"[{category.SortOrder}] {category.Name}")
            @if (category.Id != 0)
            {
                <a class="btn btn-default btn-xs" asp-area="" asp-controller="Category" asp-action="Edit" asp-route-id="@category.Id">
                    <i class="glyphicon glyphicon-pencil"></i>
                </a>
            }
        </h3>
        @foreach (var item in category.MenuItems.OrderBy(x => x.SortOrder))
        {
            <ul class="list-group">
                <li class="list-group-item" id="item-@item.Id">
                    <h4>
                        <span class="pull-right">
                            <a class="btn btn-default item-delete" data-id="@item.Id" data-restore="@item.IsDeleted">
                                <i class="glyphicon @(item.IsDeleted ? "glyphicon-refresh" : "glyphicon-trash")"></i>
                            </a>
                            <a class="btn btn-default" asp-area="" asp-controller="Menu" asp-action="Edit" asp-route-id="@item.Id">
                                <i class="glyphicon glyphicon-pencil"></i>
                            </a>
                        </span>
                        [@item.SortOrder]
                        @item.Name
                    </h4>
                    <p>
                        @item.Description
                    </p>
                    <p class="small text-right">
                        @foreach (var price in item.Prices.OrderBy(x => x.PriceTypeSortOrder))
                        {
                            <span style="margin-right:1em">
                                @(string.IsNullOrWhiteSpace(price.PriceTypeName) ? "[no price type]" : price.PriceTypeName):
                                @price.AmountAsCurrency
                            </span>
                        }
                    </p>
                </li>
            </ul>
        }
    }
}


@section Scripts {
    <script>
        $(document).ready(function () {
            $('.item-delete').on('click', function (e) {
                const id = $(this).data('id');
                const restore = $(this).data('restore');
                e.preventDefault();
                $.ajax('/Menu/Delete/' + id + '?isRestore=' + restore, {
                    type: 'Delete',
                    success: function (data) {
                        $.toast({ text: 'Deleted', icon: 'success' })
                        $('#item-' + id).remove();
                    },
                    error: function (data) {
                        $.toast({ text: 'Unknown error occurred', hideAfter: false, icon: 'error' })
                    }
                })
            });
        });
    </script>
}
